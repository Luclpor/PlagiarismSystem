//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\namofun\plagiarism\src\Plag.Frontend.Csharp\CSharpParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Antlr4.Grammar.Csharp {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICSharpParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
//[System.CLSCompliant(false)]
public partial class CSharpParserBaseListener : ICSharpParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CompilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CompilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceOrTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceOrTypeName([NotNull] CSharpParser.NamespaceOrTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceOrTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceOrTypeName([NotNull] CSharpParser.NamespaceOrTypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.BaseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] CSharpParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.BaseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] CSharpParser.BaseTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TupleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleType([NotNull] CSharpParser.TupleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TupleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleType([NotNull] CSharpParser.TupleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TupleElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleElement([NotNull] CSharpParser.TupleElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TupleElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleElement([NotNull] CSharpParser.TupleElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SimpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleType([NotNull] CSharpParser.SimpleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SimpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleType([NotNull] CSharpParser.SimpleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NumericType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericType([NotNull] CSharpParser.NumericTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NumericType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericType([NotNull] CSharpParser.NumericTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IntegralType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegralType([NotNull] CSharpParser.IntegralTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IntegralType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegralType([NotNull] CSharpParser.IntegralTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FloatingPointType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatingPointType([NotNull] CSharpParser.FloatingPointTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FloatingPointType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatingPointType([NotNull] CSharpParser.FloatingPointTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassType([NotNull] CSharpParser.ClassTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassType([NotNull] CSharpParser.ClassTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeArgumentList([NotNull] CSharpParser.TypeArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeArgumentList([NotNull] CSharpParser.TypeArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] CSharpParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] CSharpParser.ArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] CSharpParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] CSharpParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CSharpParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CSharpParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NonAssignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonAssignmentExpression([NotNull] CSharpParser.NonAssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NonAssignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonAssignmentExpression([NotNull] CSharpParser.NonAssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] CSharpParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] CSharpParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AssignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] CSharpParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AssignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] CSharpParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpression([NotNull] CSharpParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpression([NotNull] CSharpParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NullCoalescingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullCoalescingExpression([NotNull] CSharpParser.NullCoalescingExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NullCoalescingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullCoalescingExpression([NotNull] CSharpParser.NullCoalescingExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConditionalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalOrExpression([NotNull] CSharpParser.ConditionalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConditionalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalOrExpression([NotNull] CSharpParser.ConditionalOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConditionalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalAndExpression([NotNull] CSharpParser.ConditionalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConditionalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalAndExpression([NotNull] CSharpParser.ConditionalAndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusiveOrExpression([NotNull] CSharpParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusiveOrExpression([NotNull] CSharpParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusiveOrExpression([NotNull] CSharpParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusiveOrExpression([NotNull] CSharpParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] CSharpParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] CSharpParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EqualityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] CSharpParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EqualityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] CSharpParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RelationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] CSharpParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RelationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] CSharpParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ShiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpression([NotNull] CSharpParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ShiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpression([NotNull] CSharpParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AdditiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] CSharpParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AdditiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] CSharpParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MultiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] CSharpParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MultiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] CSharpParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchExpression([NotNull] CSharpParser.SwitchExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchExpression([NotNull] CSharpParser.SwitchExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchExpressionArms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchExpressionArms([NotNull] CSharpParser.SwitchExpressionArmsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchExpressionArms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchExpressionArms([NotNull] CSharpParser.SwitchExpressionArmsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchExpressionArm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchExpressionArm([NotNull] CSharpParser.SwitchExpressionArmContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchExpressionArm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchExpressionArm([NotNull] CSharpParser.SwitchExpressionArmContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpressionImpl([NotNull] CSharpParser.UnaryExpressionImplContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpressionImpl([NotNull] CSharpParser.UnaryExpressionImplContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RangeExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeExpressionImpl([NotNull] CSharpParser.RangeExpressionImplContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RangeExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeExpressionImpl([NotNull] CSharpParser.RangeExpressionImplContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.UnaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] CSharpParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.UnaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] CSharpParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PrimaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] CSharpParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PrimaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] CSharpParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] CSharpParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] CSharpParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleNameExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleNameExpression([NotNull] CSharpParser.SimpleNameExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleNameExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleNameExpression([NotNull] CSharpParser.SimpleNameExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesisExpressions</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpressions([NotNull] CSharpParser.ParenthesisExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesisExpressions</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpressions([NotNull] CSharpParser.ParenthesisExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MemberAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccessExpression([NotNull] CSharpParser.MemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MemberAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccessExpression([NotNull] CSharpParser.MemberAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralAccessExpression([NotNull] CSharpParser.LiteralAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralAccessExpression([NotNull] CSharpParser.LiteralAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ThisReferenceExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisReferenceExpression([NotNull] CSharpParser.ThisReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ThisReferenceExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisReferenceExpression([NotNull] CSharpParser.ThisReferenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BaseAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseAccessExpression([NotNull] CSharpParser.BaseAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BaseAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseAccessExpression([NotNull] CSharpParser.BaseAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjectCreationExpressionFull</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreationExpressionFull([NotNull] CSharpParser.ObjectCreationExpressionFullContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjectCreationExpressionFull</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreationExpressionFull([NotNull] CSharpParser.ObjectCreationExpressionFullContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TupleExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleExpression([NotNull] CSharpParser.TupleExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TupleExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleExpression([NotNull] CSharpParser.TupleExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofExpression([NotNull] CSharpParser.TypeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofExpression([NotNull] CSharpParser.TypeofExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCheckedExpression([NotNull] CSharpParser.CheckedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCheckedExpression([NotNull] CSharpParser.CheckedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UncheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUncheckedExpression([NotNull] CSharpParser.UncheckedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UncheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUncheckedExpression([NotNull] CSharpParser.UncheckedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefaultValueExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultValueExpression([NotNull] CSharpParser.DefaultValueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefaultValueExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultValueExpression([NotNull] CSharpParser.DefaultValueExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnonymousMethodExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousMethodExpression([NotNull] CSharpParser.AnonymousMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnonymousMethodExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousMethodExpression([NotNull] CSharpParser.AnonymousMethodExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SizeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeofExpression([NotNull] CSharpParser.SizeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SizeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeofExpression([NotNull] CSharpParser.SizeofExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NameofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameofExpression([NotNull] CSharpParser.NameofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NameofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameofExpression([NotNull] CSharpParser.NameofExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ThrowableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowableExpression([NotNull] CSharpParser.ThrowableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ThrowableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowableExpression([NotNull] CSharpParser.ThrowableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ThrowExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowExpression([NotNull] CSharpParser.ThrowExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ThrowExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowExpression([NotNull] CSharpParser.ThrowExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] CSharpParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] CSharpParser.MemberAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.BracketExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracketExpression([NotNull] CSharpParser.BracketExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.BracketExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracketExpression([NotNull] CSharpParser.BracketExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IndexerArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexerArgument([NotNull] CSharpParser.IndexerArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IndexerArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexerArgument([NotNull] CSharpParser.IndexerArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PredefinedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefinedType([NotNull] CSharpParser.PredefinedTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PredefinedType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefinedType([NotNull] CSharpParser.PredefinedTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExpressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] CSharpParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExpressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] CSharpParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ObjectOrCollectionInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectOrCollectionInitializer([NotNull] CSharpParser.ObjectOrCollectionInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ObjectOrCollectionInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectOrCollectionInitializer([NotNull] CSharpParser.ObjectOrCollectionInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ObjectInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectInitializer([NotNull] CSharpParser.ObjectInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ObjectInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectInitializer([NotNull] CSharpParser.ObjectInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberInitializerList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberInitializerList([NotNull] CSharpParser.MemberInitializerListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberInitializerList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberInitializerList([NotNull] CSharpParser.MemberInitializerListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberInitializer([NotNull] CSharpParser.MemberInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberInitializer([NotNull] CSharpParser.MemberInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InitializerValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializerValue([NotNull] CSharpParser.InitializerValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InitializerValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializerValue([NotNull] CSharpParser.InitializerValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CollectionInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionInitializer([NotNull] CSharpParser.CollectionInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CollectionInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionInitializer([NotNull] CSharpParser.CollectionInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ElementInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementInitializer([NotNull] CSharpParser.ElementInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ElementInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementInitializer([NotNull] CSharpParser.ElementInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AnonymousObjectInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousObjectInitializer([NotNull] CSharpParser.AnonymousObjectInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AnonymousObjectInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousObjectInitializer([NotNull] CSharpParser.AnonymousObjectInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberDeclaratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberDeclaratorList([NotNull] CSharpParser.MemberDeclaratorListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberDeclaratorList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberDeclaratorList([NotNull] CSharpParser.MemberDeclaratorListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberDeclarator([NotNull] CSharpParser.MemberDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberDeclarator([NotNull] CSharpParser.MemberDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.UnboundTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnboundTypeName([NotNull] CSharpParser.UnboundTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.UnboundTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnboundTypeName([NotNull] CSharpParser.UnboundTypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GenericDimensionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericDimensionSpecifier([NotNull] CSharpParser.GenericDimensionSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GenericDimensionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericDimensionSpecifier([NotNull] CSharpParser.GenericDimensionSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IsType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsType([NotNull] CSharpParser.IsTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IsType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsType([NotNull] CSharpParser.IsTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IsTypePatternArms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsTypePatternArms([NotNull] CSharpParser.IsTypePatternArmsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IsTypePatternArms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsTypePatternArms([NotNull] CSharpParser.IsTypePatternArmsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IsTypePatternArm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsTypePatternArm([NotNull] CSharpParser.IsTypePatternArmContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IsTypePatternArm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsTypePatternArm([NotNull] CSharpParser.IsTypePatternArmContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LambdaExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambdaExpression([NotNull] CSharpParser.LambdaExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LambdaExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambdaExpression([NotNull] CSharpParser.LambdaExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AnonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousFunctionSignature([NotNull] CSharpParser.AnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AnonymousFunctionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousFunctionSignature([NotNull] CSharpParser.AnonymousFunctionSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitAnonymousFunctionParameter([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitAnonymousFunctionParameter([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ImplicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ImplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ImplicitAnonymousFunctionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ImplicitAnonymousFunctionParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AnonymousFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousFunctionBody([NotNull] CSharpParser.AnonymousFunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AnonymousFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousFunctionBody([NotNull] CSharpParser.AnonymousFunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryExpression([NotNull] CSharpParser.QueryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryExpression([NotNull] CSharpParser.QueryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FromClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFromClause([NotNull] CSharpParser.FromClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FromClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFromClause([NotNull] CSharpParser.FromClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryBody([NotNull] CSharpParser.QueryBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryBody([NotNull] CSharpParser.QueryBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryBodyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryBodyClause([NotNull] CSharpParser.QueryBodyClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryBodyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryBodyClause([NotNull] CSharpParser.QueryBodyClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetClause([NotNull] CSharpParser.LetClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetClause([NotNull] CSharpParser.LetClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.WhereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhereClause([NotNull] CSharpParser.WhereClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.WhereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhereClause([NotNull] CSharpParser.WhereClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CombinedJoinClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCombinedJoinClause([NotNull] CSharpParser.CombinedJoinClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CombinedJoinClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCombinedJoinClause([NotNull] CSharpParser.CombinedJoinClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.OrderbyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderbyClause([NotNull] CSharpParser.OrderbyClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.OrderbyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderbyClause([NotNull] CSharpParser.OrderbyClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdering([NotNull] CSharpParser.OrderingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdering([NotNull] CSharpParser.OrderingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SelectOrGroupClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectOrGroupClause([NotNull] CSharpParser.SelectOrGroupClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SelectOrGroupClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectOrGroupClause([NotNull] CSharpParser.SelectOrGroupClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryContinuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryContinuation([NotNull] CSharpParser.QueryContinuationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryContinuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryContinuation([NotNull] CSharpParser.QueryContinuationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.DeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationStatement([NotNull] CSharpParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.DeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationStatement([NotNull] CSharpParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalFunctionDeclaration([NotNull] CSharpParser.LocalFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalFunctionDeclaration([NotNull] CSharpParser.LocalFunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalFunctionHeader([NotNull] CSharpParser.LocalFunctionHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalFunctionHeader([NotNull] CSharpParser.LocalFunctionHeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalFunctionModifiers([NotNull] CSharpParser.LocalFunctionModifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalFunctionModifiers([NotNull] CSharpParser.LocalFunctionModifiersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalFunctionBody([NotNull] CSharpParser.LocalFunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalFunctionBody([NotNull] CSharpParser.LocalFunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LabeledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeledStatement([NotNull] CSharpParser.LabeledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LabeledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeledStatement([NotNull] CSharpParser.LabeledStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedStatement([NotNull] CSharpParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedStatement([NotNull] CSharpParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TheEmptyStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTheEmptyStatement([NotNull] CSharpParser.TheEmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TheEmptyStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTheEmptyStatement([NotNull] CSharpParser.TheEmptyStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] CSharpParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] CSharpParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] CSharpParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] CSharpParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] CSharpParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] CSharpParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] CSharpParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] CSharpParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoStatement([NotNull] CSharpParser.DoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoStatement([NotNull] CSharpParser.DoStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] CSharpParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] CSharpParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForeachStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachStatement([NotNull] CSharpParser.ForeachStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForeachStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachStatement([NotNull] CSharpParser.ForeachStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] CSharpParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] CSharpParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] CSharpParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] CSharpParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GotoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStatement([NotNull] CSharpParser.GotoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GotoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStatement([NotNull] CSharpParser.GotoStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] CSharpParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] CSharpParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ThrowStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowStatement([NotNull] CSharpParser.ThrowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ThrowStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowStatement([NotNull] CSharpParser.ThrowStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TryStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTryStatement([NotNull] CSharpParser.TryStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TryStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTryStatement([NotNull] CSharpParser.TryStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCheckedStatement([NotNull] CSharpParser.CheckedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCheckedStatement([NotNull] CSharpParser.CheckedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UncheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUncheckedStatement([NotNull] CSharpParser.UncheckedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UncheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUncheckedStatement([NotNull] CSharpParser.UncheckedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LockStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLockStatement([NotNull] CSharpParser.LockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LockStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLockStatement([NotNull] CSharpParser.LockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStatement([NotNull] CSharpParser.UsingStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStatement([NotNull] CSharpParser.UsingStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>YieldStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYieldStatement([NotNull] CSharpParser.YieldStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>YieldStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYieldStatement([NotNull] CSharpParser.YieldStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UnsafeStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsafeStatement([NotNull] CSharpParser.UnsafeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnsafeStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsafeStatement([NotNull] CSharpParser.UnsafeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FixedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedStatement([NotNull] CSharpParser.FixedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FixedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedStatement([NotNull] CSharpParser.FixedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVariableType([NotNull] CSharpParser.LocalVariableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVariableType([NotNull] CSharpParser.LocalVariableTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVariableDeclarator([NotNull] CSharpParser.LocalVariableDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVariableDeclarator([NotNull] CSharpParser.LocalVariableDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVariableInitializer([NotNull] CSharpParser.LocalVariableInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVariableInitializer([NotNull] CSharpParser.LocalVariableInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalConstantDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalConstantDeclaration([NotNull] CSharpParser.LocalConstantDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalConstantDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalConstantDeclaration([NotNull] CSharpParser.LocalConstantDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IfBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBody([NotNull] CSharpParser.IfBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IfBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBody([NotNull] CSharpParser.IfBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchSection([NotNull] CSharpParser.SwitchSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchSection([NotNull] CSharpParser.SwitchSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchLabel([NotNull] CSharpParser.SwitchLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchLabel([NotNull] CSharpParser.SwitchLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CaseGuard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseGuard([NotNull] CSharpParser.CaseGuardContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CaseGuard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseGuard([NotNull] CSharpParser.CaseGuardContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StatementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] CSharpParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StatementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] CSharpParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ForInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInitializer([NotNull] CSharpParser.ForInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ForInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInitializer([NotNull] CSharpParser.ForInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ForIterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForIterator([NotNull] CSharpParser.ForIteratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ForIterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForIterator([NotNull] CSharpParser.ForIteratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CatchClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatchClauses([NotNull] CSharpParser.CatchClausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CatchClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatchClauses([NotNull] CSharpParser.CatchClausesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SpecificCatchClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpecificCatchClause([NotNull] CSharpParser.SpecificCatchClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SpecificCatchClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpecificCatchClause([NotNull] CSharpParser.SpecificCatchClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GeneralCatchClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneralCatchClause([NotNull] CSharpParser.GeneralCatchClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GeneralCatchClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneralCatchClause([NotNull] CSharpParser.GeneralCatchClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExceptionFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExceptionFilter([NotNull] CSharpParser.ExceptionFilterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExceptionFilter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExceptionFilter([NotNull] CSharpParser.ExceptionFilterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FinallyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinallyClause([NotNull] CSharpParser.FinallyClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FinallyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinallyClause([NotNull] CSharpParser.FinallyClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ResourceAcquisition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResourceAcquisition([NotNull] CSharpParser.ResourceAcquisitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ResourceAcquisition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResourceAcquisition([NotNull] CSharpParser.ResourceAcquisitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDeclaration([NotNull] CSharpParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDeclaration([NotNull] CSharpParser.NamespaceDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QualifiedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedIdentifier([NotNull] CSharpParser.QualifiedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QualifiedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedIdentifier([NotNull] CSharpParser.QualifiedIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceBody([NotNull] CSharpParser.NamespaceBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceBody([NotNull] CSharpParser.NamespaceBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExternAliasDirectives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternAliasDirectives([NotNull] CSharpParser.ExternAliasDirectivesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExternAliasDirectives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternAliasDirectives([NotNull] CSharpParser.ExternAliasDirectivesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExternAliasDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternAliasDirective([NotNull] CSharpParser.ExternAliasDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExternAliasDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternAliasDirective([NotNull] CSharpParser.ExternAliasDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.UsingDirectives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingDirectives([NotNull] CSharpParser.UsingDirectivesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.UsingDirectives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingDirectives([NotNull] CSharpParser.UsingDirectivesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingAliasDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingAliasDirective([NotNull] CSharpParser.UsingAliasDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingAliasDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingAliasDirective([NotNull] CSharpParser.UsingAliasDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingNamespaceDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingNamespaceDirective([NotNull] CSharpParser.UsingNamespaceDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingNamespaceDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingNamespaceDirective([NotNull] CSharpParser.UsingNamespaceDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingStaticDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStaticDirective([NotNull] CSharpParser.UsingStaticDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingStaticDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStaticDirective([NotNull] CSharpParser.UsingStaticDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceMemberDeclarations([NotNull] CSharpParser.NamespaceMemberDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceMemberDeclarations([NotNull] CSharpParser.NamespaceMemberDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceMemberDeclaration([NotNull] CSharpParser.NamespaceMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceMemberDeclaration([NotNull] CSharpParser.NamespaceMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QualifiedAliasMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedAliasMember([NotNull] CSharpParser.QualifiedAliasMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QualifiedAliasMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedAliasMember([NotNull] CSharpParser.QualifiedAliasMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterList([NotNull] CSharpParser.TypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterList([NotNull] CSharpParser.TypeParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameter([NotNull] CSharpParser.TypeParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameter([NotNull] CSharpParser.TypeParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassBase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBase([NotNull] CSharpParser.ClassBaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassBase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBase([NotNull] CSharpParser.ClassBaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceTypeList([NotNull] CSharpParser.InterfaceTypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceTypeList([NotNull] CSharpParser.InterfaceTypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterConstraintsClauses([NotNull] CSharpParser.TypeParameterConstraintsClausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterConstraintsClauses([NotNull] CSharpParser.TypeParameterConstraintsClausesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterConstraintsClause([NotNull] CSharpParser.TypeParameterConstraintsClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterConstraintsClause([NotNull] CSharpParser.TypeParameterConstraintsClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterConstraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeParameterConstraints([NotNull] CSharpParser.TypeParameterConstraintsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterConstraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeParameterConstraints([NotNull] CSharpParser.TypeParameterConstraintsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PrimaryConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryConstraint([NotNull] CSharpParser.PrimaryConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PrimaryConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryConstraint([NotNull] CSharpParser.PrimaryConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SecondaryConstraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSecondaryConstraints([NotNull] CSharpParser.SecondaryConstraintsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SecondaryConstraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSecondaryConstraints([NotNull] CSharpParser.SecondaryConstraintsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstructorConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorConstraint([NotNull] CSharpParser.ConstructorConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstructorConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorConstraint([NotNull] CSharpParser.ConstructorConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] CSharpParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] CSharpParser.ClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMemberDeclarations([NotNull] CSharpParser.ClassMemberDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassMemberDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMemberDeclarations([NotNull] CSharpParser.ClassMemberDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMemberDeclaration([NotNull] CSharpParser.ClassMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMemberDeclaration([NotNull] CSharpParser.ClassMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AllMemberModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAllMemberModifiers([NotNull] CSharpParser.AllMemberModifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AllMemberModifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAllMemberModifiers([NotNull] CSharpParser.AllMemberModifiersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AllMemberModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAllMemberModifier([NotNull] CSharpParser.AllMemberModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AllMemberModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAllMemberModifier([NotNull] CSharpParser.AllMemberModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CommonMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommonMemberDeclaration([NotNull] CSharpParser.CommonMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CommonMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommonMemberDeclaration([NotNull] CSharpParser.CommonMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypedMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedMemberDeclaration([NotNull] CSharpParser.TypedMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypedMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedMemberDeclaration([NotNull] CSharpParser.TypedMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstantDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDeclarators([NotNull] CSharpParser.ConstantDeclaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstantDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDeclarators([NotNull] CSharpParser.ConstantDeclaratorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstantDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDeclarator([NotNull] CSharpParser.ConstantDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstantDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDeclarator([NotNull] CSharpParser.ConstantDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariableDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarators([NotNull] CSharpParser.VariableDeclaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariableDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarators([NotNull] CSharpParser.VariableDeclaratorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariableDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarator([NotNull] CSharpParser.VariableDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariableDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarator([NotNull] CSharpParser.VariableDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariableInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableInitializer([NotNull] CSharpParser.VariableInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariableInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableInitializer([NotNull] CSharpParser.VariableInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ReturnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] CSharpParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ReturnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] CSharpParser.ReturnTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberName([NotNull] CSharpParser.MemberNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberName([NotNull] CSharpParser.MemberNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodBody([NotNull] CSharpParser.MethodBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodBody([NotNull] CSharpParser.MethodBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FormalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] CSharpParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FormalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] CSharpParser.FormalParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedParameters([NotNull] CSharpParser.FixedParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedParameters([NotNull] CSharpParser.FixedParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedParameter([NotNull] CSharpParser.FixedParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedParameter([NotNull] CSharpParser.FixedParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ParameterModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterModifier([NotNull] CSharpParser.ParameterModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ParameterModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterModifier([NotNull] CSharpParser.ParameterModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ParameterArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterArray([NotNull] CSharpParser.ParameterArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ParameterArray"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterArray([NotNull] CSharpParser.ParameterArrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AccessorDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessorDeclarations([NotNull] CSharpParser.AccessorDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AccessorDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessorDeclarations([NotNull] CSharpParser.AccessorDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GetAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetAccessorDeclaration([NotNull] CSharpParser.GetAccessorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GetAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetAccessorDeclaration([NotNull] CSharpParser.GetAccessorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SetAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetAccessorDeclaration([NotNull] CSharpParser.SetAccessorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SetAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetAccessorDeclaration([NotNull] CSharpParser.SetAccessorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AccessorModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessorModifier([NotNull] CSharpParser.AccessorModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AccessorModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessorModifier([NotNull] CSharpParser.AccessorModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AccessorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessorBody([NotNull] CSharpParser.AccessorBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AccessorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessorBody([NotNull] CSharpParser.AccessorBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EventAccessorDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventAccessorDeclarations([NotNull] CSharpParser.EventAccessorDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EventAccessorDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventAccessorDeclarations([NotNull] CSharpParser.EventAccessorDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AddAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddAccessorDeclaration([NotNull] CSharpParser.AddAccessorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AddAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddAccessorDeclaration([NotNull] CSharpParser.AddAccessorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RemoveAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemoveAccessorDeclaration([NotNull] CSharpParser.RemoveAccessorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RemoveAccessorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemoveAccessorDeclaration([NotNull] CSharpParser.RemoveAccessorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.OverloadableOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOverloadableOperator([NotNull] CSharpParser.OverloadableOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.OverloadableOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOverloadableOperator([NotNull] CSharpParser.OverloadableOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConversionOperatorDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversionOperatorDeclarator([NotNull] CSharpParser.ConversionOperatorDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConversionOperatorDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversionOperatorDeclarator([NotNull] CSharpParser.ConversionOperatorDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstructorInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorInitializer([NotNull] CSharpParser.ConstructorInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstructorInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorInitializer([NotNull] CSharpParser.ConstructorInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] CSharpParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] CSharpParser.BodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructInterfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructInterfaces([NotNull] CSharpParser.StructInterfacesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructInterfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructInterfaces([NotNull] CSharpParser.StructInterfacesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructBody([NotNull] CSharpParser.StructBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructBody([NotNull] CSharpParser.StructBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructMemberDeclaration([NotNull] CSharpParser.StructMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructMemberDeclaration([NotNull] CSharpParser.StructMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] CSharpParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] CSharpParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RankSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRankSpecifier([NotNull] CSharpParser.RankSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RankSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRankSpecifier([NotNull] CSharpParser.RankSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArrayInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayInitializer([NotNull] CSharpParser.ArrayInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArrayInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayInitializer([NotNull] CSharpParser.ArrayInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariantTypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantTypeParameterList([NotNull] CSharpParser.VariantTypeParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariantTypeParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantTypeParameterList([NotNull] CSharpParser.VariantTypeParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariantTypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantTypeParameter([NotNull] CSharpParser.VariantTypeParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariantTypeParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantTypeParameter([NotNull] CSharpParser.VariantTypeParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VarianceAnnotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarianceAnnotation([NotNull] CSharpParser.VarianceAnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VarianceAnnotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarianceAnnotation([NotNull] CSharpParser.VarianceAnnotationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceBase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceBase([NotNull] CSharpParser.InterfaceBaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceBase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceBase([NotNull] CSharpParser.InterfaceBaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceAccessors([NotNull] CSharpParser.InterfaceAccessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceAccessors([NotNull] CSharpParser.InterfaceAccessorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumBase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumBase([NotNull] CSharpParser.EnumBaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumBase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumBase([NotNull] CSharpParser.EnumBaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumBody([NotNull] CSharpParser.EnumBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumBody([NotNull] CSharpParser.EnumBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumMemberDeclaration([NotNull] CSharpParser.EnumMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumMemberDeclaration([NotNull] CSharpParser.EnumMemberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GlobalAttributeSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalAttributeSection([NotNull] CSharpParser.GlobalAttributeSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GlobalAttributeSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalAttributeSection([NotNull] CSharpParser.GlobalAttributeSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GlobalAttributeTarget"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalAttributeTarget([NotNull] CSharpParser.GlobalAttributeTargetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GlobalAttributeTarget"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalAttributeTarget([NotNull] CSharpParser.GlobalAttributeTargetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributes([NotNull] CSharpParser.AttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributes([NotNull] CSharpParser.AttributesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeSection([NotNull] CSharpParser.AttributeSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeSection([NotNull] CSharpParser.AttributeSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeTarget"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeTarget([NotNull] CSharpParser.AttributeTargetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeTarget"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeTarget([NotNull] CSharpParser.AttributeTargetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeList([NotNull] CSharpParser.AttributeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeList([NotNull] CSharpParser.AttributeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] CSharpParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] CSharpParser.AttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeArgument([NotNull] CSharpParser.AttributeArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeArgument([NotNull] CSharpParser.AttributeArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerType([NotNull] CSharpParser.PointerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerType([NotNull] CSharpParser.PointerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedPointerDeclarators([NotNull] CSharpParser.FixedPointerDeclaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedPointerDeclarators([NotNull] CSharpParser.FixedPointerDeclaratorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedPointerDeclarator([NotNull] CSharpParser.FixedPointerDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedPointerDeclarator([NotNull] CSharpParser.FixedPointerDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedPointerInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedPointerInitializer([NotNull] CSharpParser.FixedPointerInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedPointerInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedPointerInitializer([NotNull] CSharpParser.FixedPointerInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedSizeBufferDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedSizeBufferDeclarator([NotNull] CSharpParser.FixedSizeBufferDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedSizeBufferDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedSizeBufferDeclarator([NotNull] CSharpParser.FixedSizeBufferDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StackallocInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStackallocInitializer([NotNull] CSharpParser.StackallocInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StackallocInitializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStackallocInitializer([NotNull] CSharpParser.StackallocInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RightArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightArrow([NotNull] CSharpParser.RightArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RightArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightArrow([NotNull] CSharpParser.RightArrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RightShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightShift([NotNull] CSharpParser.RightShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RightShift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightShift([NotNull] CSharpParser.RightShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RightShiftAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightShiftAssignment([NotNull] CSharpParser.RightShiftAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RightShiftAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightShiftAssignment([NotNull] CSharpParser.RightShiftAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] CSharpParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] CSharpParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.BooleanLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteral([NotNull] CSharpParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.BooleanLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteral([NotNull] CSharpParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] CSharpParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] CSharpParser.StringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedRegularString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedRegularString([NotNull] CSharpParser.InterpolatedRegularStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedRegularString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedRegularString([NotNull] CSharpParser.InterpolatedRegularStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedVerbatiumString([NotNull] CSharpParser.InterpolatedVerbatiumStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumString"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedVerbatiumString([NotNull] CSharpParser.InterpolatedVerbatiumStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedRegularStringPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedRegularStringPart([NotNull] CSharpParser.InterpolatedRegularStringPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedRegularStringPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedRegularStringPart([NotNull] CSharpParser.InterpolatedRegularStringPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumStringPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedVerbatiumStringPart([NotNull] CSharpParser.InterpolatedVerbatiumStringPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumStringPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedVerbatiumStringPart([NotNull] CSharpParser.InterpolatedVerbatiumStringPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedStringExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolatedStringExpression([NotNull] CSharpParser.InterpolatedStringExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedStringExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolatedStringExpression([NotNull] CSharpParser.InterpolatedStringExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] CSharpParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] CSharpParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDefinition([NotNull] CSharpParser.ClassDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDefinition([NotNull] CSharpParser.ClassDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDefinition([NotNull] CSharpParser.StructDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDefinition([NotNull] CSharpParser.StructDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceDefinition([NotNull] CSharpParser.InterfaceDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceDefinition([NotNull] CSharpParser.InterfaceDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDefinition([NotNull] CSharpParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDefinition([NotNull] CSharpParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.DelegateDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelegateDefinition([NotNull] CSharpParser.DelegateDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.DelegateDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelegateDefinition([NotNull] CSharpParser.DelegateDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EventDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventDeclaration([NotNull] CSharpParser.EventDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EventDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventDeclaration([NotNull] CSharpParser.EventDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FieldDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FieldDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PropertyDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyDeclaration([NotNull] CSharpParser.PropertyDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PropertyDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyDeclaration([NotNull] CSharpParser.PropertyDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstantDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDeclaration([NotNull] CSharpParser.ConstantDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstantDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDeclaration([NotNull] CSharpParser.ConstantDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IndexerDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexerDeclaration([NotNull] CSharpParser.IndexerDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IndexerDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexerDeclaration([NotNull] CSharpParser.IndexerDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.DestructorDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDestructorDefinition([NotNull] CSharpParser.DestructorDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.DestructorDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDestructorDefinition([NotNull] CSharpParser.DestructorDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstructorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorDeclaration([NotNull] CSharpParser.ConstructorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstructorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorDeclaration([NotNull] CSharpParser.ConstructorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodMemberName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodMemberName([NotNull] CSharpParser.MethodMemberNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodMemberName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodMemberName([NotNull] CSharpParser.MethodMemberNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.OperatorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorDeclaration([NotNull] CSharpParser.OperatorDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.OperatorDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorDeclaration([NotNull] CSharpParser.OperatorDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArgDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgDeclaration([NotNull] CSharpParser.ArgDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArgDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgDeclaration([NotNull] CSharpParser.ArgDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodInvocation([NotNull] CSharpParser.MethodInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodInvocation([NotNull] CSharpParser.MethodInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ObjectCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreationExpression([NotNull] CSharpParser.ObjectCreationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ObjectCreationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreationExpression([NotNull] CSharpParser.ObjectCreationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] CSharpParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] CSharpParser.IdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Antlr4.Grammar.Csharp
