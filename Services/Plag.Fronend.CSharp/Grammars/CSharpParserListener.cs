//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\namofun\plagiarism\src\Plag.Frontend.Csharp\CSharpParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Antlr4.Grammar.Csharp {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CSharpParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
//[System.CLSCompliant(false)]
public interface ICSharpParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CompilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CompilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceOrTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceOrTypeName([NotNull] CSharpParser.NamespaceOrTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceOrTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceOrTypeName([NotNull] CSharpParser.NamespaceOrTypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CSharpParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CSharpParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.BaseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseType([NotNull] CSharpParser.BaseTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.BaseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseType([NotNull] CSharpParser.BaseTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TupleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleType([NotNull] CSharpParser.TupleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TupleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleType([NotNull] CSharpParser.TupleTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TupleElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleElement([NotNull] CSharpParser.TupleElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TupleElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleElement([NotNull] CSharpParser.TupleElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SimpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleType([NotNull] CSharpParser.SimpleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SimpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleType([NotNull] CSharpParser.SimpleTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NumericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericType([NotNull] CSharpParser.NumericTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NumericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericType([NotNull] CSharpParser.NumericTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IntegralType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegralType([NotNull] CSharpParser.IntegralTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IntegralType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegralType([NotNull] CSharpParser.IntegralTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FloatingPointType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatingPointType([NotNull] CSharpParser.FloatingPointTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FloatingPointType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatingPointType([NotNull] CSharpParser.FloatingPointTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassType([NotNull] CSharpParser.ClassTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassType([NotNull] CSharpParser.ClassTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeArgumentList([NotNull] CSharpParser.TypeArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeArgumentList([NotNull] CSharpParser.TypeArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] CSharpParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] CSharpParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] CSharpParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] CSharpParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CSharpParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CSharpParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NonAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonAssignmentExpression([NotNull] CSharpParser.NonAssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NonAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonAssignmentExpression([NotNull] CSharpParser.NonAssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CSharpParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CSharpParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AssignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] CSharpParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AssignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] CSharpParser.AssignmentOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalExpression([NotNull] CSharpParser.ConditionalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalExpression([NotNull] CSharpParser.ConditionalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NullCoalescingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullCoalescingExpression([NotNull] CSharpParser.NullCoalescingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NullCoalescingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullCoalescingExpression([NotNull] CSharpParser.NullCoalescingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalOrExpression([NotNull] CSharpParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalOrExpression([NotNull] CSharpParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalAndExpression([NotNull] CSharpParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalAndExpression([NotNull] CSharpParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveOrExpression([NotNull] CSharpParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveOrExpression([NotNull] CSharpParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveOrExpression([NotNull] CSharpParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveOrExpression([NotNull] CSharpParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] CSharpParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] CSharpParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EqualityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] CSharpParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EqualityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] CSharpParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RelationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] CSharpParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RelationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] CSharpParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ShiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpression([NotNull] CSharpParser.ShiftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ShiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpression([NotNull] CSharpParser.ShiftExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AdditiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] CSharpParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AdditiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] CSharpParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MultiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] CSharpParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MultiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] CSharpParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchExpression([NotNull] CSharpParser.SwitchExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchExpression([NotNull] CSharpParser.SwitchExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchExpressionArms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchExpressionArms([NotNull] CSharpParser.SwitchExpressionArmsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchExpressionArms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchExpressionArms([NotNull] CSharpParser.SwitchExpressionArmsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchExpressionArm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchExpressionArm([NotNull] CSharpParser.SwitchExpressionArmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchExpressionArm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchExpressionArm([NotNull] CSharpParser.SwitchExpressionArmContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpressionImpl([NotNull] CSharpParser.UnaryExpressionImplContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpressionImpl([NotNull] CSharpParser.UnaryExpressionImplContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>RangeExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeExpressionImpl([NotNull] CSharpParser.RangeExpressionImplContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RangeExpressionImpl</c>
	/// labeled alternative in <see cref="CSharpParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeExpressionImpl([NotNull] CSharpParser.RangeExpressionImplContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.UnaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] CSharpParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.UnaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] CSharpParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PrimaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpression([NotNull] CSharpParser.PrimaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PrimaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpression([NotNull] CSharpParser.PrimaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpression([NotNull] CSharpParser.LiteralExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpression([NotNull] CSharpParser.LiteralExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleNameExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleNameExpression([NotNull] CSharpParser.SimpleNameExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleNameExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleNameExpression([NotNull] CSharpParser.SimpleNameExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesisExpressions</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExpressions([NotNull] CSharpParser.ParenthesisExpressionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesisExpressions</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExpressions([NotNull] CSharpParser.ParenthesisExpressionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MemberAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccessExpression([NotNull] CSharpParser.MemberAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MemberAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccessExpression([NotNull] CSharpParser.MemberAccessExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralAccessExpression([NotNull] CSharpParser.LiteralAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralAccessExpression([NotNull] CSharpParser.LiteralAccessExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ThisReferenceExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThisReferenceExpression([NotNull] CSharpParser.ThisReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ThisReferenceExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThisReferenceExpression([NotNull] CSharpParser.ThisReferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BaseAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseAccessExpression([NotNull] CSharpParser.BaseAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BaseAccessExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseAccessExpression([NotNull] CSharpParser.BaseAccessExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjectCreationExpressionFull</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectCreationExpressionFull([NotNull] CSharpParser.ObjectCreationExpressionFullContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjectCreationExpressionFull</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectCreationExpressionFull([NotNull] CSharpParser.ObjectCreationExpressionFullContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TupleExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExpression([NotNull] CSharpParser.TupleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TupleExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExpression([NotNull] CSharpParser.TupleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeofExpression([NotNull] CSharpParser.TypeofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeofExpression([NotNull] CSharpParser.TypeofExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckedExpression([NotNull] CSharpParser.CheckedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckedExpression([NotNull] CSharpParser.CheckedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UncheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUncheckedExpression([NotNull] CSharpParser.UncheckedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UncheckedExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUncheckedExpression([NotNull] CSharpParser.UncheckedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DefaultValueExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultValueExpression([NotNull] CSharpParser.DefaultValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DefaultValueExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultValueExpression([NotNull] CSharpParser.DefaultValueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AnonymousMethodExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousMethodExpression([NotNull] CSharpParser.AnonymousMethodExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AnonymousMethodExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousMethodExpression([NotNull] CSharpParser.AnonymousMethodExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SizeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSizeofExpression([NotNull] CSharpParser.SizeofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SizeofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSizeofExpression([NotNull] CSharpParser.SizeofExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NameofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameofExpression([NotNull] CSharpParser.NameofExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NameofExpression</c>
	/// labeled alternative in <see cref="CSharpParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameofExpression([NotNull] CSharpParser.NameofExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ThrowableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowableExpression([NotNull] CSharpParser.ThrowableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ThrowableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowableExpression([NotNull] CSharpParser.ThrowableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ThrowExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowExpression([NotNull] CSharpParser.ThrowExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ThrowExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowExpression([NotNull] CSharpParser.ThrowExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccess([NotNull] CSharpParser.MemberAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccess([NotNull] CSharpParser.MemberAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.BracketExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBracketExpression([NotNull] CSharpParser.BracketExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.BracketExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBracketExpression([NotNull] CSharpParser.BracketExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IndexerArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerArgument([NotNull] CSharpParser.IndexerArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IndexerArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerArgument([NotNull] CSharpParser.IndexerArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PredefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredefinedType([NotNull] CSharpParser.PredefinedTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PredefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredefinedType([NotNull] CSharpParser.PredefinedTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] CSharpParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] CSharpParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ObjectOrCollectionInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectOrCollectionInitializer([NotNull] CSharpParser.ObjectOrCollectionInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ObjectOrCollectionInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectOrCollectionInitializer([NotNull] CSharpParser.ObjectOrCollectionInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ObjectInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectInitializer([NotNull] CSharpParser.ObjectInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ObjectInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectInitializer([NotNull] CSharpParser.ObjectInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberInitializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberInitializerList([NotNull] CSharpParser.MemberInitializerListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberInitializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberInitializerList([NotNull] CSharpParser.MemberInitializerListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberInitializer([NotNull] CSharpParser.MemberInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberInitializer([NotNull] CSharpParser.MemberInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InitializerValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerValue([NotNull] CSharpParser.InitializerValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InitializerValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerValue([NotNull] CSharpParser.InitializerValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CollectionInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCollectionInitializer([NotNull] CSharpParser.CollectionInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CollectionInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCollectionInitializer([NotNull] CSharpParser.CollectionInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ElementInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementInitializer([NotNull] CSharpParser.ElementInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ElementInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementInitializer([NotNull] CSharpParser.ElementInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AnonymousObjectInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousObjectInitializer([NotNull] CSharpParser.AnonymousObjectInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AnonymousObjectInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousObjectInitializer([NotNull] CSharpParser.AnonymousObjectInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberDeclaratorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberDeclaratorList([NotNull] CSharpParser.MemberDeclaratorListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberDeclaratorList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberDeclaratorList([NotNull] CSharpParser.MemberDeclaratorListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberDeclarator([NotNull] CSharpParser.MemberDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberDeclarator([NotNull] CSharpParser.MemberDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.UnboundTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnboundTypeName([NotNull] CSharpParser.UnboundTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.UnboundTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnboundTypeName([NotNull] CSharpParser.UnboundTypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GenericDimensionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericDimensionSpecifier([NotNull] CSharpParser.GenericDimensionSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GenericDimensionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericDimensionSpecifier([NotNull] CSharpParser.GenericDimensionSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IsType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsType([NotNull] CSharpParser.IsTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IsType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsType([NotNull] CSharpParser.IsTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IsTypePatternArms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsTypePatternArms([NotNull] CSharpParser.IsTypePatternArmsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IsTypePatternArms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsTypePatternArms([NotNull] CSharpParser.IsTypePatternArmsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IsTypePatternArm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsTypePatternArm([NotNull] CSharpParser.IsTypePatternArmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IsTypePatternArm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsTypePatternArm([NotNull] CSharpParser.IsTypePatternArmContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaExpression([NotNull] CSharpParser.LambdaExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaExpression([NotNull] CSharpParser.LambdaExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AnonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousFunctionSignature([NotNull] CSharpParser.AnonymousFunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AnonymousFunctionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousFunctionSignature([NotNull] CSharpParser.AnonymousFunctionSignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitAnonymousFunctionParameter([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExplicitAnonymousFunctionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitAnonymousFunctionParameter([NotNull] CSharpParser.ExplicitAnonymousFunctionParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ImplicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ImplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ImplicitAnonymousFunctionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitAnonymousFunctionParameterList([NotNull] CSharpParser.ImplicitAnonymousFunctionParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AnonymousFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousFunctionBody([NotNull] CSharpParser.AnonymousFunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AnonymousFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousFunctionBody([NotNull] CSharpParser.AnonymousFunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryExpression([NotNull] CSharpParser.QueryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryExpression([NotNull] CSharpParser.QueryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FromClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromClause([NotNull] CSharpParser.FromClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FromClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromClause([NotNull] CSharpParser.FromClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryBody([NotNull] CSharpParser.QueryBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryBody([NotNull] CSharpParser.QueryBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryBodyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryBodyClause([NotNull] CSharpParser.QueryBodyClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryBodyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryBodyClause([NotNull] CSharpParser.QueryBodyClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LetClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetClause([NotNull] CSharpParser.LetClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LetClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetClause([NotNull] CSharpParser.LetClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.WhereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] CSharpParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.WhereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] CSharpParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CombinedJoinClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCombinedJoinClause([NotNull] CSharpParser.CombinedJoinClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CombinedJoinClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCombinedJoinClause([NotNull] CSharpParser.CombinedJoinClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.OrderbyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderbyClause([NotNull] CSharpParser.OrderbyClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.OrderbyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderbyClause([NotNull] CSharpParser.OrderbyClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrdering([NotNull] CSharpParser.OrderingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrdering([NotNull] CSharpParser.OrderingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SelectOrGroupClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectOrGroupClause([NotNull] CSharpParser.SelectOrGroupClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SelectOrGroupClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectOrGroupClause([NotNull] CSharpParser.SelectOrGroupClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QueryContinuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryContinuation([NotNull] CSharpParser.QueryContinuationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QueryContinuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryContinuation([NotNull] CSharpParser.QueryContinuationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CSharpParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CSharpParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.DeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationStatement([NotNull] CSharpParser.DeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.DeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationStatement([NotNull] CSharpParser.DeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalFunctionDeclaration([NotNull] CSharpParser.LocalFunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalFunctionDeclaration([NotNull] CSharpParser.LocalFunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalFunctionHeader([NotNull] CSharpParser.LocalFunctionHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalFunctionHeader([NotNull] CSharpParser.LocalFunctionHeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalFunctionModifiers([NotNull] CSharpParser.LocalFunctionModifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalFunctionModifiers([NotNull] CSharpParser.LocalFunctionModifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalFunctionBody([NotNull] CSharpParser.LocalFunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalFunctionBody([NotNull] CSharpParser.LocalFunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LabeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledStatement([NotNull] CSharpParser.LabeledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LabeledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledStatement([NotNull] CSharpParser.LabeledStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmbeddedStatement([NotNull] CSharpParser.EmbeddedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmbeddedStatement([NotNull] CSharpParser.EmbeddedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TheEmptyStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTheEmptyStatement([NotNull] CSharpParser.TheEmptyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TheEmptyStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTheEmptyStatement([NotNull] CSharpParser.TheEmptyStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] CSharpParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] CSharpParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] CSharpParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] CSharpParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] CSharpParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] CSharpParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] CSharpParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] CSharpParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoStatement([NotNull] CSharpParser.DoStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoStatement([NotNull] CSharpParser.DoStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] CSharpParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] CSharpParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForeachStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachStatement([NotNull] CSharpParser.ForeachStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForeachStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachStatement([NotNull] CSharpParser.ForeachStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] CSharpParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] CSharpParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] CSharpParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] CSharpParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>GotoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotoStatement([NotNull] CSharpParser.GotoStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GotoStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotoStatement([NotNull] CSharpParser.GotoStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] CSharpParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] CSharpParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ThrowStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowStatement([NotNull] CSharpParser.ThrowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ThrowStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowStatement([NotNull] CSharpParser.ThrowStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TryStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryStatement([NotNull] CSharpParser.TryStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TryStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryStatement([NotNull] CSharpParser.TryStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckedStatement([NotNull] CSharpParser.CheckedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckedStatement([NotNull] CSharpParser.CheckedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UncheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUncheckedStatement([NotNull] CSharpParser.UncheckedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UncheckedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUncheckedStatement([NotNull] CSharpParser.UncheckedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LockStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockStatement([NotNull] CSharpParser.LockStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LockStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockStatement([NotNull] CSharpParser.LockStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingStatement([NotNull] CSharpParser.UsingStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingStatement([NotNull] CSharpParser.UsingStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>YieldStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterYieldStatement([NotNull] CSharpParser.YieldStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>YieldStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitYieldStatement([NotNull] CSharpParser.YieldStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnsafeStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsafeStatement([NotNull] CSharpParser.UnsafeStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnsafeStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsafeStatement([NotNull] CSharpParser.UnsafeStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FixedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedStatement([NotNull] CSharpParser.FixedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FixedStatement</c>
	/// labeled alternative in <see cref="CSharpParser.simpleEmbeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedStatement([NotNull] CSharpParser.FixedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] CSharpParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] CSharpParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVariableType([NotNull] CSharpParser.LocalVariableTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVariableType([NotNull] CSharpParser.LocalVariableTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVariableDeclarator([NotNull] CSharpParser.LocalVariableDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVariableDeclarator([NotNull] CSharpParser.LocalVariableDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalVariableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVariableInitializer([NotNull] CSharpParser.LocalVariableInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalVariableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVariableInitializer([NotNull] CSharpParser.LocalVariableInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.LocalConstantDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalConstantDeclaration([NotNull] CSharpParser.LocalConstantDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.LocalConstantDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalConstantDeclaration([NotNull] CSharpParser.LocalConstantDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IfBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBody([NotNull] CSharpParser.IfBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IfBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBody([NotNull] CSharpParser.IfBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchSection([NotNull] CSharpParser.SwitchSectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchSection([NotNull] CSharpParser.SwitchSectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SwitchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchLabel([NotNull] CSharpParser.SwitchLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SwitchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchLabel([NotNull] CSharpParser.SwitchLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CaseGuard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseGuard([NotNull] CSharpParser.CaseGuardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CaseGuard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseGuard([NotNull] CSharpParser.CaseGuardContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StatementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] CSharpParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StatementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] CSharpParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ForInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInitializer([NotNull] CSharpParser.ForInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ForInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInitializer([NotNull] CSharpParser.ForInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ForIterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForIterator([NotNull] CSharpParser.ForIteratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ForIterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForIterator([NotNull] CSharpParser.ForIteratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CatchClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatchClauses([NotNull] CSharpParser.CatchClausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CatchClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatchClauses([NotNull] CSharpParser.CatchClausesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SpecificCatchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecificCatchClause([NotNull] CSharpParser.SpecificCatchClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SpecificCatchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecificCatchClause([NotNull] CSharpParser.SpecificCatchClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GeneralCatchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneralCatchClause([NotNull] CSharpParser.GeneralCatchClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GeneralCatchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneralCatchClause([NotNull] CSharpParser.GeneralCatchClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExceptionFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExceptionFilter([NotNull] CSharpParser.ExceptionFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExceptionFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExceptionFilter([NotNull] CSharpParser.ExceptionFilterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FinallyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinallyClause([NotNull] CSharpParser.FinallyClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FinallyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinallyClause([NotNull] CSharpParser.FinallyClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ResourceAcquisition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceAcquisition([NotNull] CSharpParser.ResourceAcquisitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ResourceAcquisition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceAcquisition([NotNull] CSharpParser.ResourceAcquisitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceDeclaration([NotNull] CSharpParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceDeclaration([NotNull] CSharpParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedIdentifier([NotNull] CSharpParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedIdentifier([NotNull] CSharpParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceBody([NotNull] CSharpParser.NamespaceBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceBody([NotNull] CSharpParser.NamespaceBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExternAliasDirectives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternAliasDirectives([NotNull] CSharpParser.ExternAliasDirectivesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExternAliasDirectives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternAliasDirectives([NotNull] CSharpParser.ExternAliasDirectivesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ExternAliasDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternAliasDirective([NotNull] CSharpParser.ExternAliasDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ExternAliasDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternAliasDirective([NotNull] CSharpParser.ExternAliasDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.UsingDirectives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingDirectives([NotNull] CSharpParser.UsingDirectivesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.UsingDirectives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingDirectives([NotNull] CSharpParser.UsingDirectivesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingAliasDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingAliasDirective([NotNull] CSharpParser.UsingAliasDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingAliasDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingAliasDirective([NotNull] CSharpParser.UsingAliasDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingNamespaceDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingNamespaceDirective([NotNull] CSharpParser.UsingNamespaceDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingNamespaceDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingNamespaceDirective([NotNull] CSharpParser.UsingNamespaceDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UsingStaticDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingStaticDirective([NotNull] CSharpParser.UsingStaticDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UsingStaticDirective</c>
	/// labeled alternative in <see cref="CSharpParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingStaticDirective([NotNull] CSharpParser.UsingStaticDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceMemberDeclarations([NotNull] CSharpParser.NamespaceMemberDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceMemberDeclarations([NotNull] CSharpParser.NamespaceMemberDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceMemberDeclaration([NotNull] CSharpParser.NamespaceMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.NamespaceMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceMemberDeclaration([NotNull] CSharpParser.NamespaceMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.QualifiedAliasMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedAliasMember([NotNull] CSharpParser.QualifiedAliasMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.QualifiedAliasMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedAliasMember([NotNull] CSharpParser.QualifiedAliasMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameterList([NotNull] CSharpParser.TypeParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameterList([NotNull] CSharpParser.TypeParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameter([NotNull] CSharpParser.TypeParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameter([NotNull] CSharpParser.TypeParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBase([NotNull] CSharpParser.ClassBaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBase([NotNull] CSharpParser.ClassBaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceTypeList([NotNull] CSharpParser.InterfaceTypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceTypeList([NotNull] CSharpParser.InterfaceTypeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameterConstraintsClauses([NotNull] CSharpParser.TypeParameterConstraintsClausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameterConstraintsClauses([NotNull] CSharpParser.TypeParameterConstraintsClausesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameterConstraintsClause([NotNull] CSharpParser.TypeParameterConstraintsClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterConstraintsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameterConstraintsClause([NotNull] CSharpParser.TypeParameterConstraintsClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypeParameterConstraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameterConstraints([NotNull] CSharpParser.TypeParameterConstraintsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypeParameterConstraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameterConstraints([NotNull] CSharpParser.TypeParameterConstraintsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PrimaryConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryConstraint([NotNull] CSharpParser.PrimaryConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PrimaryConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryConstraint([NotNull] CSharpParser.PrimaryConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SecondaryConstraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondaryConstraints([NotNull] CSharpParser.SecondaryConstraintsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SecondaryConstraints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondaryConstraints([NotNull] CSharpParser.SecondaryConstraintsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstructorConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorConstraint([NotNull] CSharpParser.ConstructorConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstructorConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorConstraint([NotNull] CSharpParser.ConstructorConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] CSharpParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] CSharpParser.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMemberDeclarations([NotNull] CSharpParser.ClassMemberDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassMemberDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMemberDeclarations([NotNull] CSharpParser.ClassMemberDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMemberDeclaration([NotNull] CSharpParser.ClassMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMemberDeclaration([NotNull] CSharpParser.ClassMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AllMemberModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllMemberModifiers([NotNull] CSharpParser.AllMemberModifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AllMemberModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllMemberModifiers([NotNull] CSharpParser.AllMemberModifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AllMemberModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllMemberModifier([NotNull] CSharpParser.AllMemberModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AllMemberModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllMemberModifier([NotNull] CSharpParser.AllMemberModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.CommonMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommonMemberDeclaration([NotNull] CSharpParser.CommonMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.CommonMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommonMemberDeclaration([NotNull] CSharpParser.CommonMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.TypedMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedMemberDeclaration([NotNull] CSharpParser.TypedMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.TypedMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedMemberDeclaration([NotNull] CSharpParser.TypedMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstantDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantDeclarators([NotNull] CSharpParser.ConstantDeclaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstantDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantDeclarators([NotNull] CSharpParser.ConstantDeclaratorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstantDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantDeclarator([NotNull] CSharpParser.ConstantDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstantDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantDeclarator([NotNull] CSharpParser.ConstantDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarators([NotNull] CSharpParser.VariableDeclaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarators([NotNull] CSharpParser.VariableDeclaratorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarator([NotNull] CSharpParser.VariableDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarator([NotNull] CSharpParser.VariableDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableInitializer([NotNull] CSharpParser.VariableInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableInitializer([NotNull] CSharpParser.VariableInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ReturnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnType([NotNull] CSharpParser.ReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ReturnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnType([NotNull] CSharpParser.ReturnTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MemberName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberName([NotNull] CSharpParser.MemberNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MemberName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberName([NotNull] CSharpParser.MemberNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodBody([NotNull] CSharpParser.MethodBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodBody([NotNull] CSharpParser.MethodBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FormalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameterList([NotNull] CSharpParser.FormalParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FormalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameterList([NotNull] CSharpParser.FormalParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedParameters([NotNull] CSharpParser.FixedParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedParameters([NotNull] CSharpParser.FixedParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedParameter([NotNull] CSharpParser.FixedParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedParameter([NotNull] CSharpParser.FixedParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ParameterModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterModifier([NotNull] CSharpParser.ParameterModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ParameterModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterModifier([NotNull] CSharpParser.ParameterModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ParameterArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterArray([NotNull] CSharpParser.ParameterArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ParameterArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterArray([NotNull] CSharpParser.ParameterArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AccessorDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessorDeclarations([NotNull] CSharpParser.AccessorDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AccessorDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessorDeclarations([NotNull] CSharpParser.AccessorDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GetAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetAccessorDeclaration([NotNull] CSharpParser.GetAccessorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GetAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetAccessorDeclaration([NotNull] CSharpParser.GetAccessorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.SetAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetAccessorDeclaration([NotNull] CSharpParser.SetAccessorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.SetAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetAccessorDeclaration([NotNull] CSharpParser.SetAccessorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AccessorModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessorModifier([NotNull] CSharpParser.AccessorModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AccessorModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessorModifier([NotNull] CSharpParser.AccessorModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AccessorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessorBody([NotNull] CSharpParser.AccessorBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AccessorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessorBody([NotNull] CSharpParser.AccessorBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EventAccessorDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventAccessorDeclarations([NotNull] CSharpParser.EventAccessorDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EventAccessorDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventAccessorDeclarations([NotNull] CSharpParser.EventAccessorDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AddAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddAccessorDeclaration([NotNull] CSharpParser.AddAccessorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AddAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddAccessorDeclaration([NotNull] CSharpParser.AddAccessorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RemoveAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemoveAccessorDeclaration([NotNull] CSharpParser.RemoveAccessorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RemoveAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemoveAccessorDeclaration([NotNull] CSharpParser.RemoveAccessorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.OverloadableOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOverloadableOperator([NotNull] CSharpParser.OverloadableOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.OverloadableOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOverloadableOperator([NotNull] CSharpParser.OverloadableOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConversionOperatorDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversionOperatorDeclarator([NotNull] CSharpParser.ConversionOperatorDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConversionOperatorDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversionOperatorDeclarator([NotNull] CSharpParser.ConversionOperatorDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstructorInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorInitializer([NotNull] CSharpParser.ConstructorInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstructorInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorInitializer([NotNull] CSharpParser.ConstructorInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] CSharpParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] CSharpParser.BodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructInterfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructInterfaces([NotNull] CSharpParser.StructInterfacesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructInterfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructInterfaces([NotNull] CSharpParser.StructInterfacesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructBody([NotNull] CSharpParser.StructBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructBody([NotNull] CSharpParser.StructBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructMemberDeclaration([NotNull] CSharpParser.StructMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructMemberDeclaration([NotNull] CSharpParser.StructMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayType([NotNull] CSharpParser.ArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayType([NotNull] CSharpParser.ArrayTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RankSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRankSpecifier([NotNull] CSharpParser.RankSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RankSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRankSpecifier([NotNull] CSharpParser.RankSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayInitializer([NotNull] CSharpParser.ArrayInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayInitializer([NotNull] CSharpParser.ArrayInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariantTypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariantTypeParameterList([NotNull] CSharpParser.VariantTypeParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariantTypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariantTypeParameterList([NotNull] CSharpParser.VariantTypeParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VariantTypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariantTypeParameter([NotNull] CSharpParser.VariantTypeParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VariantTypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariantTypeParameter([NotNull] CSharpParser.VariantTypeParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.VarianceAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarianceAnnotation([NotNull] CSharpParser.VarianceAnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.VarianceAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarianceAnnotation([NotNull] CSharpParser.VarianceAnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceBase([NotNull] CSharpParser.InterfaceBaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceBase([NotNull] CSharpParser.InterfaceBaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceAccessors([NotNull] CSharpParser.InterfaceAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceAccessors([NotNull] CSharpParser.InterfaceAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumBase([NotNull] CSharpParser.EnumBaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumBase([NotNull] CSharpParser.EnumBaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumBody([NotNull] CSharpParser.EnumBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumBody([NotNull] CSharpParser.EnumBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumMemberDeclaration([NotNull] CSharpParser.EnumMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumMemberDeclaration([NotNull] CSharpParser.EnumMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GlobalAttributeSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalAttributeSection([NotNull] CSharpParser.GlobalAttributeSectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GlobalAttributeSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalAttributeSection([NotNull] CSharpParser.GlobalAttributeSectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.GlobalAttributeTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalAttributeTarget([NotNull] CSharpParser.GlobalAttributeTargetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.GlobalAttributeTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalAttributeTarget([NotNull] CSharpParser.GlobalAttributeTargetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributes([NotNull] CSharpParser.AttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Attributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributes([NotNull] CSharpParser.AttributesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeSection([NotNull] CSharpParser.AttributeSectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeSection([NotNull] CSharpParser.AttributeSectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeTarget([NotNull] CSharpParser.AttributeTargetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeTarget([NotNull] CSharpParser.AttributeTargetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeList([NotNull] CSharpParser.AttributeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeList([NotNull] CSharpParser.AttributeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] CSharpParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] CSharpParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.AttributeArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeArgument([NotNull] CSharpParser.AttributeArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.AttributeArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeArgument([NotNull] CSharpParser.AttributeArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PointerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointerType([NotNull] CSharpParser.PointerTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PointerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointerType([NotNull] CSharpParser.PointerTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedPointerDeclarators([NotNull] CSharpParser.FixedPointerDeclaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedPointerDeclarators([NotNull] CSharpParser.FixedPointerDeclaratorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedPointerDeclarator([NotNull] CSharpParser.FixedPointerDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedPointerDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedPointerDeclarator([NotNull] CSharpParser.FixedPointerDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedPointerInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedPointerInitializer([NotNull] CSharpParser.FixedPointerInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedPointerInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedPointerInitializer([NotNull] CSharpParser.FixedPointerInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FixedSizeBufferDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedSizeBufferDeclarator([NotNull] CSharpParser.FixedSizeBufferDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FixedSizeBufferDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedSizeBufferDeclarator([NotNull] CSharpParser.FixedSizeBufferDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StackallocInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStackallocInitializer([NotNull] CSharpParser.StackallocInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StackallocInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStackallocInitializer([NotNull] CSharpParser.StackallocInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RightArrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightArrow([NotNull] CSharpParser.RightArrowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RightArrow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightArrow([NotNull] CSharpParser.RightArrowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RightShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightShift([NotNull] CSharpParser.RightShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RightShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightShift([NotNull] CSharpParser.RightShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.RightShiftAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRightShiftAssignment([NotNull] CSharpParser.RightShiftAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.RightShiftAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRightShiftAssignment([NotNull] CSharpParser.RightShiftAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CSharpParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CSharpParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.BooleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteral([NotNull] CSharpParser.BooleanLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.BooleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteral([NotNull] CSharpParser.BooleanLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] CSharpParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] CSharpParser.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedRegularString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolatedRegularString([NotNull] CSharpParser.InterpolatedRegularStringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedRegularString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolatedRegularString([NotNull] CSharpParser.InterpolatedRegularStringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolatedVerbatiumString([NotNull] CSharpParser.InterpolatedVerbatiumStringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolatedVerbatiumString([NotNull] CSharpParser.InterpolatedVerbatiumStringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedRegularStringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolatedRegularStringPart([NotNull] CSharpParser.InterpolatedRegularStringPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedRegularStringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolatedRegularStringPart([NotNull] CSharpParser.InterpolatedRegularStringPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumStringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolatedVerbatiumStringPart([NotNull] CSharpParser.InterpolatedVerbatiumStringPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedVerbatiumStringPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolatedVerbatiumStringPart([NotNull] CSharpParser.InterpolatedVerbatiumStringPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterpolatedStringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterpolatedStringExpression([NotNull] CSharpParser.InterpolatedStringExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterpolatedStringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterpolatedStringExpression([NotNull] CSharpParser.InterpolatedStringExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] CSharpParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] CSharpParser.KeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ClassDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDefinition([NotNull] CSharpParser.ClassDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ClassDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDefinition([NotNull] CSharpParser.ClassDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.StructDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDefinition([NotNull] CSharpParser.StructDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.StructDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDefinition([NotNull] CSharpParser.StructDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.InterfaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceDefinition([NotNull] CSharpParser.InterfaceDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.InterfaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceDefinition([NotNull] CSharpParser.InterfaceDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EnumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDefinition([NotNull] CSharpParser.EnumDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EnumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDefinition([NotNull] CSharpParser.EnumDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.DelegateDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDelegateDefinition([NotNull] CSharpParser.DelegateDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.DelegateDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDelegateDefinition([NotNull] CSharpParser.DelegateDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.EventDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventDeclaration([NotNull] CSharpParser.EventDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.EventDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventDeclaration([NotNull] CSharpParser.EventDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.FieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.FieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.PropertyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyDeclaration([NotNull] CSharpParser.PropertyDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.PropertyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyDeclaration([NotNull] CSharpParser.PropertyDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstantDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantDeclaration([NotNull] CSharpParser.ConstantDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstantDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantDeclaration([NotNull] CSharpParser.ConstantDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.IndexerDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerDeclaration([NotNull] CSharpParser.IndexerDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.IndexerDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerDeclaration([NotNull] CSharpParser.IndexerDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.DestructorDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDestructorDefinition([NotNull] CSharpParser.DestructorDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.DestructorDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDestructorDefinition([NotNull] CSharpParser.DestructorDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorDeclaration([NotNull] CSharpParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorDeclaration([NotNull] CSharpParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodMemberName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodMemberName([NotNull] CSharpParser.MethodMemberNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodMemberName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodMemberName([NotNull] CSharpParser.MethodMemberNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.OperatorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorDeclaration([NotNull] CSharpParser.OperatorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.OperatorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorDeclaration([NotNull] CSharpParser.OperatorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ArgDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgDeclaration([NotNull] CSharpParser.ArgDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ArgDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgDeclaration([NotNull] CSharpParser.ArgDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.MethodInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodInvocation([NotNull] CSharpParser.MethodInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.MethodInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodInvocation([NotNull] CSharpParser.MethodInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.ObjectCreationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectCreationExpression([NotNull] CSharpParser.ObjectCreationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.ObjectCreationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectCreationExpression([NotNull] CSharpParser.ObjectCreationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.Identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] CSharpParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.Identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] CSharpParser.IdentifierContext context);
}
} // namespace Antlr4.Grammar.Csharp
